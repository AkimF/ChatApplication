syntax = "proto3";

package chatserver;

service ChatServer
{
    rpc LogIn (stream LogInRequest) returns (stream LogInReply) {}
    rpc LogOut (LogOutRequest) returns (LogOutReply) {}
    rpc SendMessage (stream SendMessageRequest) returns (stream SendMessageReply) {}
    rpc ReceiveMessage (ReceiveMessageRequest) returns (stream ReceiveMessageReply) {}
    rpc List (ListRequest) returns (ListReply) {}
    rpc Chat (stream ChatMessage) returns (stream ChatMessage) {}
}

message ChatMessage
{
    string user = 1;
    string messages = 2;
}

message LogInRequest
{
    string user = 1;
}

message LogInReply
{
    string confirmation = 1;
    string user = 2;

    enum State
    {
        SERVER_OFF = 0;
        INVALID = 1;
        ALREADY = 2;
        SUCCESS = 3;
    }

    State logInState = 3;
}

message LogOutRequest
{
    string user = 1;
}

message LogOutReply
{
    string confirmation = 1;
}

message SendMessageRequest
{
    string user = 1;
    string recipient = 2;
    string messages = 3;

    enum State
    {
        INITIAL = 0;
        PROCESSING = 1;
    }

    State requestState = 4;
}

message SendMessageReply
{
    string confirmation = 1;

    enum State
    {
        EXIST = 0;
        NO_EXIST = 1;
    }

    State recipientState = 2;
}

message ReceiveMessageRequest
{
    string user = 1;
}

message ReceiveMessageReply
{
    string messages = 1;
    string confirmation = 2;

    enum State
    {
        EMPTY = 0;
        NON_EMPTY = 1;
    }

    State queueState = 3;
}

message ListRequest
{
    string list = 1;
}

message ListReply
{
    string list = 1;
}
